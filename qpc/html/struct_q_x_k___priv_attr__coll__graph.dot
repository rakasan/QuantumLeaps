digraph "QXK_PrivAttr"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{QXK_PrivAttr\n|+ actPrio\l+ lockPrio\l+ lockHolder\l+ intNest\l|}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="attributes of the QXK kernel"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +curr\n+idleThread\n+next" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{QActive\n|+ prio\l|+ QACTIVE_START\l+ QACTIVE_POST\l+ QACTIVE_POST_X\l+ QACTIVE_POST_LIFO\l# QActive_ctor()\l# QActive_stop()\l# QActive_subscribe()\l# QActive_unsubscribe()\l# QActive_unsubscribeAll()\l# QActive_defer()\l# QActive_recall()\l# QActive_flushDeferred()\l# QActive_setAttr()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_q_active.html",tooltip="Active Object base class (based on QHsm implementation)"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{QHsm\n||+ QHSM_INIT\l+ QHSM_DISPATCH\l+ QHsm_state\l+ QHsm_childState\l+ QHsm_isIn()\l# QHsm_ctor()\l# QHsm_top()\l- QHsm_childState_()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_q_hsm.html",tooltip="Hierarchical State Machine class."];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +state\n+temp" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{QHsmAttr\n|+ act\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$qep_8h.html#union_q_hsm_attr",tooltip="Attribute of for the QHsm class (Hierarchical State Machine)."];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +obj" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{QMState\n|+ stateHandler\l+ entryAction\l+ exitAction\l+ initAction\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$qep_8h.html#struct_q_m_state",tooltip="State object for the QMsm class (QM State Machine)."];
  Node5 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +superstate" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +fun" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{QEvt\n|+ sig\l+ poolId_\l+ refCtr_\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_q_evt.html",tooltip="Event class."];
  Node7 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +thr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{QXThread\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_q_x_thread.html",tooltip="eXtended (blocking) thread of the QXK preemptive kernel"];
  Node2 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +timeEvt" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{QTimeEvt\n|+ act\l+ ctr\l+ interval\l|+ QTimeEvt_ctorX()\l+ QTimeEvt_armX()\l+ QTimeEvt_rearm()\l+ QTimeEvt_disarm()\l+ QTimeEvt_wasDisarmed()\l+ QTimeEvt_currCtr()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_q_time_evt.html",tooltip="Time Event class."];
  Node6 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +super" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +next" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +super" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +tatbl" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{QMTranActTable\n|+ act\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$qep_8h.html#struct_q_m_tran_act_table",tooltip="Transition-Action Table for the Meta State Machine."];
  Node5 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +target" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +vptr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{QHsmVtable\n|+ init\l+ dispatch\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_q_hsm_vtable.html",tooltip="Virtual table for the QHsm class."];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +super" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +readySet" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{QPSet\n|+ bits\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$qpset_8h.html#struct_q_p_set",tooltip="Priority Set of up to 32 elements."];
}
