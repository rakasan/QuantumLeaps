digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="QHsm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_q_hsm.html",tooltip="Hierarchical State Machine class."];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="QActive",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_q_active.html",tooltip="Active Object base class (based on QHsm implementation)"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="QTicker",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_q_ticker.html",tooltip="QTicker Active Object class."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="QXThread",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_q_x_thread.html",tooltip="eXtended (blocking) thread of the QXK preemptive kernel"];
  Node0 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="QMsm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_q_msm.html",tooltip="QM State Machine implementation strategy."];
}
